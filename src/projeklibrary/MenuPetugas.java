/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeklibrary;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUI
 */
public class MenuPetugas extends javax.swing.JPanel {

    /**
     * Creates new form MenuPetugas
     */
   List<Petugas> mod = null;
    
    public MenuPetugas() {
        initComponents();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        tf_cari = new javax.swing.JTextField();
        cbx_cari = new javax.swing.JComboBox<>();
        btn_tambah = new javax.swing.JButton();
        btn_hapus = new javax.swing.JButton();
        jButtonUbah = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_ptgs = new javax.swing.JTable();

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Search.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tf_cari.setText("Cari");
        tf_cari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_cariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_cariFocusLost(evt);
            }
        });
        tf_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_cariActionPerformed(evt);
            }
        });
        tf_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_cariKeyTyped(evt);
            }
        });

        cbx_cari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Anggota", "Nama", "NIM", "Program Studi" }));
        cbx_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_cariActionPerformed(evt);
            }
        });

        btn_tambah.setBackground(new java.awt.Color(102, 0, 0));
        btn_tambah.setForeground(new java.awt.Color(255, 255, 255));
        btn_tambah.setText("TAMBAH");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });

        btn_hapus.setBackground(new java.awt.Color(102, 0, 0));
        btn_hapus.setForeground(new java.awt.Color(255, 255, 255));
        btn_hapus.setText("HAPUS");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        jButtonUbah.setBackground(new java.awt.Color(102, 0, 0));
        jButtonUbah.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUbah.setText("UBAH");
        jButtonUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Person1_1.png"))); // NOI18N
        jLabel1.setText("DATA PETUGAS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        tbl_ptgs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Petugas", "Nama", "Alamat", "Telephone", "Email", "Jenis Kelamin"
            }
        ));
        jScrollPane1.setViewportView(tbl_ptgs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_tambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_hapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tf_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbx_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_cari)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(cbx_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_tambah)
                        .addGap(18, 18, 18)
                        .addComponent(btn_hapus)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUbah))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String sc = tf_cari.getText();
        if (sc.equals("Cari")) {
            loadData();
        } else {

            switch (cbx_cari.getSelectedIndex()) {
                case 0:
                    getByID(sc);
                    break;
                case 1:
                    getByNama(sc);
                    break;
                case 2:
                    getByAlamat(sc);
                    break;
              

            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tf_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_cariActionPerformed

    private void cbx_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbx_cariActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        new InputPetugas2(null, true).setVisible(true);
        loadData();
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        EntityManager em = Persistence.createEntityManagerFactory("ProjekLibraryPU").createEntityManager();
        em.getTransaction().begin();
        Petugas p = em.find(Petugas.class, tbl_ptgs.getValueAt(tbl_ptgs.getSelectedRow(), 0).toString());
        em.remove(p);
        em.getTransaction().commit();
        em.close();
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void jButtonUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahActionPerformed

        if (tbl_ptgs.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Pilih Data Terlebih Dahulu");
        } else {
            String s = (String) tbl_ptgs.getValueAt(tbl_ptgs.getSelectedRow(), 0);
            new InputAnggota(null, true, s).setVisible(true);
        }
        loadData();
    }//GEN-LAST:event_jButtonUbahActionPerformed

    private void tf_cariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_cariFocusGained
        String s = tf_cari.getText();
        if (s.equals("")) {
            tf_cari.setText("Cari");
        }
    }//GEN-LAST:event_tf_cariFocusGained

    private void tf_cariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_cariFocusLost
        String s = tf_cari.getText();
        if (s.equals("")) {
            tf_cari.setText("Cari");
        }
    }//GEN-LAST:event_tf_cariFocusLost

    private void tf_cariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cariKeyTyped
        char c = evt.getKeyChar();
        if (c == '\n') {
            jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_tf_cariKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JComboBox<String> cbx_cari;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_ptgs;
    private javax.swing.JTextField tf_cari;
    // End of variables declaration//GEN-END:variables
private void loadData() {
       EntityManager em = Persistence.createEntityManagerFactory("ProjekLibraryPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT p FROM Petugas p ORDER BY p.idPetugas");
        List<Petugas> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        DefaultTableModel tbl1 = (DefaultTableModel) tbl_ptgs.getModel();
        tbl1.setRowCount(0);
        tbl_ptgs.setModel(tbl1);
        mod = list;
        for (Petugas p: list){
            tbl1.addRow(new Object[] {
                p.getIdPetugas(),
                p.getNama(),
                p.getAlamat(),
                p.getTelephone(),
                p.getEmail(),
                p.getJenisKelamin(),
            });
        }
}

    public List<Petugas> getByID(String id) {
        EntityManager em = Persistence.createEntityManagerFactory("LibraLinxPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT p FROM Petugas p WHERE LOWER(p.idPetugas) LIKE ? ORDER BY p.idPetugas");
        query.setParameter(1, "%" + id.toLowerCase() + "%");
        List<Petugas> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        return list;
    }

    public List<Petugas> getByNama(String nama) {
        EntityManager em = Persistence.createEntityManagerFactory("LibraLinxPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT p FROM Petugas p WHERE LOWER(p.nama) LIKE ? ORDER BY p.idPetugas");
        query.setParameter(1, "%" + nama.toLowerCase() + "%");
        List<Petugas> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        return list;
    }

    public List<Petugas> getByAlamat(String alamat) {
        EntityManager em = Persistence.createEntityManagerFactory("LibraLinxPU").createEntityManager();
        em.getTransaction().begin();
        Query query = em.createQuery("SELECT p FROM Petugas p WHERE LOWER(p.alamat) LIKE ? ORDER BY p.idPetugas");
        query.setParameter(1, "%" + alamat.toLowerCase() + "%");
        List<Petugas> list = query.getResultList();
        em.getTransaction().commit();
        em.close();
        return list;
    }
}
